{"ast":null,"code":"var _jsxFileName = \"/home/kishore/JMAN/RecipeApp/client/src/components/dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useSyncExternalStore } from 'react';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [Ttoken, setTtoken] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  useEffect(() => {\n    // Retrieve token from cookie when the component mounts\n    const token = Cookies.get('token');\n    const type = Cookies.get('role');\n    // Update the state with the retrieved token\n    setRole(type);\n    setTtoken(token);\n  }, []); // Empty dependency array ensures this effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello World \", Ttoken, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), role]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"S6e3nVa+IIVdf6rU+XLXhyiTVN0=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useSyncExternalStore","Cookies","jsxDEV","_jsxDEV","Dashboard","_s","Ttoken","setTtoken","role","setRole","token","get","type","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kishore/JMAN/RecipeApp/client/src/components/dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useSyncExternalStore } from 'react';\nimport Cookies from 'js-cookie';\n\nexport default function Dashboard() {\n  const [Ttoken, setTtoken] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  useEffect(() => {\n    // Retrieve token from cookie when the component mounts\n    const token = Cookies.get('token');\n    const type = Cookies.get('role');\n    // Update the state with the retrieved token\n    setRole(type);\n    setTtoken(token);\n  }, []); // Empty dependency array ensures this effect runs only once on mount\n\n  return (\n    <div>\n      Hello World {Ttoken}\n      <br/>\n      {role}\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,oBAAoB,QAAQ,OAAO;AACxE,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,KAAK,GAAGT,OAAO,CAACU,GAAG,CAAC,OAAO,CAAC;IAClC,MAAMC,IAAI,GAAGX,OAAO,CAACU,GAAG,CAAC,MAAM,CAAC;IAChC;IACAF,OAAO,CAACG,IAAI,CAAC;IACbL,SAAS,CAACG,KAAK,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAU,QAAA,GAAK,cACS,EAACP,MAAM,eACnBH,OAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJT,IAAI;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACZ,EAAA,CAnBuBD,SAAS;AAAAc,EAAA,GAATd,SAAS;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}